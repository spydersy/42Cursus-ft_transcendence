


// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id                  Int       @id @unique
  login               String    @unique
  displayName         String    @unique
  defaultAvatar       String
  uploadedAvatar      String?
  Notifications       Json?
  wins                Int       @default(0)
  losses              Int       @default(0)
  level               Int       @default(0)
  twoFactorAuth       Boolean   @default(false)
  twoFactorAuthSecret String?    
  sentRequests        userRelations[] @relation("SentRequests")
  receivedRequets     userRelations[] @relation("ReceivedRequets")
}

model userRelations {
  id         Int  @id @unique @default(autoincrement())

  sender     user @relation(name: "SentRequests", fields: [senderId], references: [id])
  senderId   Int

  receiver   user @relation(name: "ReceivedRequets", fields: [receiverId], references: [id])
  receiverId Int

  blockedUser Int?
  status     Relation

  @@unique([senderId, receiverId])
  @@unique([receiverId, senderId])
}

// model Friends {
  // Id         Int     @id @default(autoincrement())
  // Sender     Users   @relation(name: "SentRequests", fields: [SenderId], references: [Id])
  // SenderId   Int
  // Receiver   Users   @relation(name: "ReceivedRequets", fields: [ReceiverId], references: [Id])
  // ReceiverId Int
  // Status     String
// }

// model Friends {
// }

// model Blocks {
//   Id        Int      @id @default(autoincrement())

//   User    Users   @relation(name: "BlackList", fields: [UserId], references: [Id])
//   UserId    Int

//   Blocked   Users   @relation(name: "BlockedUsers", fields: [BlockedId], references: [Id])
//   BlockedId Int

//   Date      DateTime @default(now())
// }

model MatchHistory {
  Id      Int       @id @default(autoincrement())
  Player1 Int
  Player2 Int
  Score1  Int       @default(0)
  Score2  Int       @default(0)
  Mode    String
  Date    DateTime  @default(now())
}

model Channels {
  Id               Int     @id @default(autoincrement())
  Access           String
  OwnerId          Int
  AdministratorsId Json?
  UsersId          Json?
  Password         String?
}

model BannedMutedUsers {
  Id             Int     @id @default(autoincrement())
  UserId         Int
  Action         String
  ActionTime     DateTime @default(now())
  delay          Int
}

model Messages {
  Id             Int     @id @default(autoincrement())
  SenderId       Int
  ChannelId      Int
  Content        String
}

enum Relation {
  FRIENDS
  PENDING
  BLOCK
  NULL
}

enum Role {
  OWNER
  ADMIN
  USER
}